<?php

namespace [% namespace %];

[% use_command_placeholder %]
use App\Http\Traits\ListTrait;
use Exception;

class [% controller_name %] [% controller_extends %]
{
[% constructor %]

    use ListTrait;

    /**
     * Display a listing of the assets.
     *
     * @return [% model_name_class %]
     */
    public function list()
    {
        $this->authorize('viewAny', [% model_name_class %]::class);
        $[% model_name_plural_variable %] = [% model_name_class %]::[% with_relations_for_index %]paginate([% models_per_page %]);

        [% index_return_success %]
    }


    /**
     * Store a new [% model_name %] in the storage.
     *
     * @param [% type_hinted_request_name %]
     * @return \Illuminate\Http\JsonResponse
     */
    public function create([% type_hinted_request_name %])
    {
        $this->authorize('create', [% model_name_class %]::class);

        [% validator_request %]
        $[% data_variable %] = [% call_get_data %];
        [% on_store_setter %]
        $[% model_name_singular_variable %] = [% model_name_class %]::create($[% data_variable %]);

        [% store_return_success %]

    }

    /**
     * Display the specified [% model_name %].
     *
     * @param int $id
     *
     * @return
     */
    public function get($id)
    {
        $this->authorize('view', [% model_name_class %]::class);
        $[% model_name_singular_variable %] = [% model_name_class %]::[% with_relations_for_show %]findOrFail($id);

        [% show_return_success %]
    }

    /**
     * Update the specified proyecto in the storage.
     *
     * @param $id
     * @param [% type_hinted_request_name %]
     * @return \Illuminate\Http\JsonResponse
     */
    public function update($id, [% type_hinted_request_name %])
    {
        $this->authorize('update', [% model_name_class %]::class);

        [% validator_request %]
        $[% data_variable %] = [% call_get_data %];
        [% on_update_setter %]
        $[% model_name_singular_variable %] = [% model_name_class %]::findOrFail($id);
        $[% model_name_singular_variable %]->update($[% data_variable %]);

        [% update_return_success %]

    }

    /**
     * Remove the specified proyecto from the storage.
     * @param $id
     * @return \Illuminate\Http\JsonResponse
     */
    public function delete($id)
    {
        $this->authorize('delete', [% model_name_class %]::class);

        $[% model_name_singular_variable %] = [% model_name_class %]::findOrFail($id);
        $[% model_name_singular_variable %]->delete();

        [% destroy_return_success %]
    }
[% get_validator_method %]
[% get_data_method %]
[% upload_method %]
[% transform_method %]
[% response_methods %]
}
